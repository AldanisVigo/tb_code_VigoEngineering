// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  lib

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( Ad ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Ad ) UnmarshalJSON([]byte) error { return nil }
func ( Ad ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Ad ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Ad *Ad

func ( AddAdRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* AddAdRequest ) UnmarshalJSON([]byte) error { return nil }
func ( AddAdRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* AddAdRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_AddAdRequest *AddAdRequest

func ( AddCategoryRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* AddCategoryRequest ) UnmarshalJSON([]byte) error { return nil }
func ( AddCategoryRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* AddCategoryRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_AddCategoryRequest *AddCategoryRequest

func ( Ads ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Ads ) UnmarshalJSON([]byte) error { return nil }
func ( Ads ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Ads ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Ads *Ads

func ( AdsRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* AdsRequest ) UnmarshalJSON([]byte) error { return nil }
func ( AdsRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* AdsRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_AdsRequest *AdsRequest

func ( Categories ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Categories ) UnmarshalJSON([]byte) error { return nil }
func ( Categories ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Categories ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Categories *Categories

func ( CategoryUpdateRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* CategoryUpdateRequest ) UnmarshalJSON([]byte) error { return nil }
func ( CategoryUpdateRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* CategoryUpdateRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_CategoryUpdateRequest *CategoryUpdateRequest

func ( DeleteCategoryRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* DeleteCategoryRequest ) UnmarshalJSON([]byte) error { return nil }
func ( DeleteCategoryRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* DeleteCategoryRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_DeleteCategoryRequest *DeleteCategoryRequest

func ( FileRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* FileRequest ) UnmarshalJSON([]byte) error { return nil }
func ( FileRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* FileRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_FileRequest *FileRequest

func ( FileUploadRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* FileUploadRequest ) UnmarshalJSON([]byte) error { return nil }
func ( FileUploadRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* FileUploadRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_FileUploadRequest *FileUploadRequest

func ( User ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* User ) UnmarshalJSON([]byte) error { return nil }
func ( User ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* User ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_User *User

func ( UserRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* UserRequest ) UnmarshalJSON([]byte) error { return nil }
func ( UserRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* UserRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_UserRequest *UserRequest
